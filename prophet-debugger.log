13:33:51, 2018-3-5
From client: initialize({"clientID":"vscode","adapterID":"prophet","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en"})
To client: {"seq":0,"type":"response","request_seq":1,"command":"initialize","success":true,"body":{"supportsConfigurationDoneRequest":true,"supportsEvaluateForHovers":false,"supportsFunctionBreakpoints":false,"supportsConditionalBreakpoints":false,"supportsHitConditionalBreakpoints":false,"supportsSetVariable":false,"supportsGotoTargetsRequest":false,"supportsRestartRequest":false,"supportsRestartFrame":false,"supportsExceptionInfoRequest":false,"supportsExceptionOptions":false,"supportsStepBack":false,"supportsValueFormattingOptions":true,"exceptionBreakpointFilters":[]}}
From client: launch({"type":"prophet","request":"launch","name":"DW-25 Script Debugger","hostname":"dw25-web-deckers.demandware.net","username":"galen.goforth","password":"K33p!tR33l","codeversion":"VSCode","cartridgeroot":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream/cartridges","workspaceroot":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream","trace":true,"debugServer":4711,"__sessionId":"ca159ee2-00d8-474e-8b0e-3ce456fc43b2"})
To client: {"seq":0,"type":"response","request_seq":2,"command":"launch","success":true}
To client: {"seq":0,"type":"event","event":"initialized"}
To client: {"seq":0,"type":"event","event":"output","body":{"category":"console","output":"successfully connected\nconsole can be used to evaluate variables\nwaiting for breakpoint hit...\n"}}
From client: setBreakpoints({"source":{"name":"Test.js","path":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream/cartridges/core_commerce/cartridge/controllers/Test.js"},"lines":[111],"breakpoints":[{"line":111}],"sourceModified":false})
To client: {"seq":0,"type":"response","request_seq":3,"command":"setBreakpoints","success":true,"body":{"breakpoints":[{"verified":true,"line":111,"source":{"name":"1 - Test.js","path":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream/cartridges/core_commerce/cartridge/controllers/Test.js","sourceReference":0}}]}}
From client: configurationDone(undefined)
To client: {"seq":0,"type":"response","request_seq":4,"command":"configurationDone","success":true}
From client: threads(undefined)
To client: {"seq":0,"type":"response","request_seq":5,"command":"threads","success":true,"body":{"threads":[]}}
To client: {"seq":0,"type":"event","event":"thread","body":{"reason":"started","threadId":10}}
To client: {"seq":0,"type":"event","event":"stopped","body":{"reason":"breakpoint","threadId":10}}
From client: threads(undefined)
From client: threads(undefined)
To client: {"seq":0,"type":"response","request_seq":6,"command":"threads","success":true,"body":{"threads":[{"id":10,"name":"thread 10"}]}}
To client: {"seq":0,"type":"response","request_seq":7,"command":"threads","success":true,"body":{"threads":[{"id":10,"name":"thread 10"}]}}
From client: stackTrace({"threadId":10,"startFrame":0,"levels":20})
From client: stackTrace({"threadId":10,"startFrame":0,"levels":20})
To client: {"seq":0,"type":"response","request_seq":8,"command":"stackTrace","success":true,"body":{"stackFrames":[{"id":1000000,"source":{"name":"Test.js","path":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream/cartridges/core_commerce/cartridge/controllers/Test.js","sourceReference":0},"line":111,"column":0,"name":"-anonymous-()"}],"totalFrames":1}}
From client: scopes({"frameId":1000000})
To client: {"seq":0,"type":"response","request_seq":9,"command":"stackTrace","success":true,"body":{"stackFrames":[{"id":1000000,"source":{"name":"Test.js","path":"/Users/galen.goforth/Documents/EclipseWork/dw-up/dw-upstream/cartridges/core_commerce/cartridge/controllers/Test.js","sourceReference":0},"line":111,"column":0,"name":"-anonymous-()"}],"totalFrames":1}}
To client: {"seq":0,"type":"response","request_seq":10,"command":"scopes","success":true,"body":{"scopes":[{"name":"local","variablesReference":1000,"expensive":false},{"name":"global","variablesReference":1001,"expensive":false}]}}
From client: variables({"variablesReference":1000})
To client: {"seq":0,"type":"response","request_seq":11,"command":"variables","success":true,"body":{"variables":[{"name":"arguments","type":"Object","value":"[object Arguments]","presentationHint":{"kind":"data"},"variablesReference":1002},{"name":"Car","type":"Function","value":"\nfunction (args) {\n    this.make = args && args.make ? args.make : \"\";\n    this.model = args && args.model ? args.model : \"\";\n    this.year = args.year;\n    this.nickname = null;\n}\n","presentationHint":{"kind":"method"},"variablesReference":0},{"name":"myCar","type":"object","value":"[object Object]","presentationHint":{"kind":"data"},"variablesReference":1003},{"name":"yourCar","type":"object","value":"null","variablesReference":0}]}}
From client: variables({"variablesReference":1001})
To client: {"seq":0,"type":"response","request_seq":12,"command":"variables","success":true,"body":{"variables":[{"name":"exports","type":"Object","value":"[object Object]","variablesReference":0},{"name":"guard","type":"Object","value":"[object Object]","variablesReference":0},{"name":"ISML","type":"function","value":"[JavaClass dw.template.ISML]","variablesReference":0},{"name":"log","type":"dw/system/Log","value":"[Log id=22989326]","variablesReference":0},{"name":"Logger","type":"function","value":"[JavaClass dw.system.Logger]","variablesReference":0},{"name":"module","type":"Object","value":"[object Object]","variablesReference":0},{"name":"orderConfirmation","type":"Function","value":"\nfunction orderConfirmation() {\n    const OrderMgr = require(\"dw/order/OrderMgr\");\n    const Order = require(\"dw/order/Order\");\n    const Site = require(\"dw/system/Site\");\n    const paramMap = request.httpParameterMap;\n    const isStoreConnect = Site.getCurrent().getCustomPreferenceValue(\"enableStoreShipments\");\n    let order;\n    try {\n        if (paramMap.orderNo.value) {\n            order = OrderMgr.getOrder(paramMap.orderNo.stringValue);\n        } else {\n            const Calendar = require(\"dw/util/Calendar\");\n            const cal = new Calendar();\n            const date = cal.getTime();\n            let month = date.getMonth() === 0 ? 12 : date.getMonth();\n            let year = month === 12 ? date.getFullYear() - 1 : date.getFullYear();\n            const dateString = year + \"-\" + month + \"-\" + date.getDate() + \"T00:00:00\";\n            order = OrderMgr.searchOrders(\"creationDate >= {0} AND status != {1} AND status != {2} AND status != {3}\", \"creationDate desc\", dateString, Order.ORDER_STATUS_CANCELLED, Order.ORDER_STATUS_FAILED, Order.ORDER_STATUS_REPLACED).first();\n        }\n    }\n    catch (e) {\n        let errString = \"ERROR in Test.js controller at Test-OrderConfirmation\";\n        Object.keys(e).forEach(function (key) {\n            errString += \"\\n\" + key + \": \" + e[key];\n        });\n        log.error(errString);\n    }\n    const template = isStoreConnect ? \"checkout/confirmation/storeconfirmation\" : \"checkout/confirmation/confirmation\";\n    ISML.renderTemplate(template, {Order: order, CurrentCustomer: customer, CurrentSession: session});\n}\n","presentationHint":{"kind":"method"},"variablesReference":0}]}}
From client: variables({"variablesReference":1003})
To client: {"seq":0,"type":"response","request_seq":13,"command":"variables","success":true,"body":{"variables":[{"name":"make","type":"string","value":"Honda","variablesReference":0},{"name":"model","type":"string","value":"Pilot","variablesReference":0},{"name":"nickname","type":"object","value":"null","variablesReference":0},{"name":"year","type":"undefined","value":"undefined","variablesReference":0}]}}
From client: continue({"threadId":10})
To client: {"seq":0,"type":"event","event":"stopped","body":{"reason":"step","threadId":10}}
To client: {"seq":0,"type":"response","request_seq":14,"command":"continue","success":true,"body":{"allThreadsContinued":false}}
From client: threads(undefined)
To client: {"seq":0,"type":"response","request_seq":15,"command":"threads","success":true,"body":{"threads":[]}}
To client: {"seq":0,"type":"event","event":"thread","body":{"reason":"exited","threadId":10}}
